<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="0" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="449" started-at="2021-07-27T12:35:53Z" finished-at="2021-07-27T12:35:54Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:testRunners.TestRunner@61d47554]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Test" duration-ms="449" started-at="2021-07-27T12:35:53Z" finished-at="2021-07-27T12:35:54Z">
      <class name="testRunners.TestRunner">
        <test-method status="FAIL" signature="setUpClass()[pri:0, instance:testRunners.TestRunner@61d47554]" name="setUpClass" is-config="true" duration-ms="112" started-at="2021-07-27T12:35:54Z" finished-at="2021-07-27T12:35:54Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[path must exist: C:\Users\sanapati\Downloads\rppomcucumber\rppomcucumber\src\Features]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: path must exist: C:\Users\sanapati\Downloads\rppomcucumber\rppomcucumber\src\Features
at io.cucumber.core.resource.PathScanner.findResourcesForPath(PathScanner.java:49)
at io.cucumber.core.resource.PathScanner.findResourcesForUri(PathScanner.java:31)
at io.cucumber.core.resource.ResourceScanner.findResourcesForUri(ResourceScanner.java:61)
at io.cucumber.core.resource.ResourceScanner.scanForResourcesUri(ResourceScanner.java:134)
at io.cucumber.core.runtime.FeaturePathFeatureSupplier.loadFeatures(FeaturePathFeatureSupplier.java:62)
at io.cucumber.core.runtime.FeaturePathFeatureSupplier.get(FeaturePathFeatureSupplier.java:45)
at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:108)
at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:testRunners.TestRunner@61d47554]" name="tearDownClass" is-config="true" duration-ms="0" started-at="2021-07-27T12:35:54Z" finished-at="2021-07-27T12:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunners.TestRunner -->
      <class name="main.java.com.rp.automation.base.BaseTest">
        <test-method status="PASS" signature="openBrowser(java.lang.String)[pri:0, instance:main.java.com.rp.automation.base.BaseTest@b7f23d9]" name="openBrowser" is-config="true" duration-ms="2277" started-at="2021-07-27T12:35:51Z" finished-at="2021-07-27T12:35:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="initReports()[pri:0, instance:main.java.com.rp.automation.base.BaseTest@b7f23d9]" name="initReports" is-config="true" duration-ms="95" started-at="2021-07-27T12:35:53Z" finished-at="2021-07-27T12:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReports -->
        <test-method status="PASS" signature="generateReports()[pri:0, instance:main.java.com.rp.automation.base.BaseTest@b7f23d9]" name="generateReports" is-config="true" duration-ms="223" started-at="2021-07-27T12:35:54Z" finished-at="2021-07-27T12:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReports -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:main.java.com.rp.automation.base.BaseTest@b7f23d9]" name="closeBrowser" is-config="true" duration-ms="92" started-at="2021-07-27T12:35:54Z" finished-at="2021-07-27T12:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- main.java.com.rp.automation.base.BaseTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
